plugins {
    //id 'java'
    id 'groovy'
    id 'java-library'
    id 'signing'
    id 'maven-publish'
    id('io.github.gradle-nexus.publish-plugin') version '1.3.0'
    id "com.github.ben-manes.versions" version "0.47.0"
}

group = 'se.alipsa'
version = '1.0.0-SNAPSHOT'
description = 'Allows Gade Gui Interactive capabilities from a standalone app'

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
    //withSourcesJar()
    //withJavadocJar()
}

task javadocJar(type: Jar, dependsOn: groovydoc) {
    archiveClassifier.set('javadoc')
    from groovydoc.destinationDir
}


task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

nexusPublishing {
    repositories {
        sonatype()
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact(javadocJar)
            artifact(sourcesJar)
            pom {
                name = 'Gade standalone GUI interaction library'
                description = "${project.description}"
                url = "https://github.com/Alipsa/GuiInteraction"
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://raw.githubusercontent.com/Alipsa/GuiInteraction/main/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'perNyfelt'
                        name = 'Per Nyfelt'
                    }
                }
                scm {
                    url = 'https://github.com/Alipsa/GuiInteraction/tree/main'
                    connection = 'scm:git:https://github.com/Alipsa/GuiInteraction.git'
                    developerConnection = 'scm:git:https://github.com/Alipsa/GuiInteraction.git'
                }
            }
        }
    }
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

// https://github.com/ben-manes/gradle-versions-plugin
tasks.named("dependencyUpdates").configure {
    gradleReleaseChannel = "current"
    resolutionStrategy {
        componentSelection {
            all {
                if (isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)) {
                    reject('Release candidate')
                }
            }
        }
    }
}