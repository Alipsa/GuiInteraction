plugins {
    id 'groovy'
    id 'java-library'
    id 'maven-publish'
}

group = 'se.alipsa'
version = '1.0.0-SNAPSHOT'
description = 'Allows Gade Gui Interactive capabilities from a javafx standalone app'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    if (version.contains('SNAPSHOT')) {
        // Slows down the build (a lot), use only if local SNAPSHOTS are needed
        mavenLocal()
    }
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
    withSourcesJar()
    withJavadocJar()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

dependencies {
    org.gradle.internal.os.OperatingSystem os = org.gradle.internal.os.OperatingSystem.current()

    // check https://repo1.maven.org/maven2/org/openjfx/javafx/20/javafx-20.pom for the platform property
    def qualifier = 'unknown'
    if (os.isLinux()) {
        qualifier='linux'
    } else if (os.isWindows()) {
        qualifier = 'win'
    } else if (os.isMacOsX()) {
        qualifier = 'mac-aarch64'
    }
    def javaFxVersion = '20.0.2'
    def groovyVersion = '4.0.25'
    def tablesawVersion = "0.43.1"

    api project(':gi-common')
    implementation 'se.alipsa:fx-yearmonth-picker:1.1.0'
    implementation(platform("se.alipsa.matrix:matrix-bom:1.1.1"))
    implementation 'se.alipsa.matrix:matrix-core'
    implementation 'se.alipsa.matrix:matrix-charts'
    compileOnly "org.apache.groovy:groovy:${groovyVersion}"
    compileOnly "org.openjfx:javafx-graphics:${javaFxVersion}:$qualifier"
    compileOnly "org.openjfx:javafx-base:${javaFxVersion}:$qualifier"
    compileOnly "org.openjfx:javafx-controls:${javaFxVersion}:$qualifier"
    compileOnly "org.openjfx:javafx-swing:${javaFxVersion}:$qualifier"
    compileOnly "org.openjfx:javafx-web:${javaFxVersion}:$qualifier"

    testImplementation platform('org.junit:junit-bom:5.10.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation "org.openjfx:javafx-graphics:${javaFxVersion}:$qualifier"
    testImplementation "org.openjfx:javafx-base:${javaFxVersion}:$qualifier"
    testImplementation "org.openjfx:javafx-controls:${javaFxVersion}:$qualifier"
    testImplementation "org.openjfx:javafx-swing:${javaFxVersion}:$qualifier"
    testImplementation "org.openjfx:javafx-web:${javaFxVersion}:$qualifier"
}

test {
    useJUnitPlatform()
}

def fatJarContainer = tasks.register('fatjar', Jar) {
    dependsOn(classes)
    archiveClassifier = 'fatjar'
    //archiveBaseName = project.name + '-fat'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    with jar
}


jar {
    dependsOn fatJarContainer
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifacts = [jar, fatJarContainer, javadocJar, sourcesJar]
            pom {
                name = 'Gade standalone GUI interaction library'
                description = "${project.description}"
                url = "https://github.com/Alipsa/GuiInteraction"
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://raw.githubusercontent.com/Alipsa/GuiInteraction/main/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'perNyfelt'
                        name = 'Per Nyfelt'
                    }
                }
                scm {
                    url = 'https://github.com/Alipsa/GuiInteraction/tree/main'
                    connection = 'scm:git:https://github.com/Alipsa/GuiInteraction.git'
                    developerConnection = 'scm:git:https://github.com/Alipsa/GuiInteraction.git'
                }
            }
        }
    }
}